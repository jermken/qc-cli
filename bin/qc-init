#!/usr/bin/env node
const program = require('commander')
const chalk = require('chalk')
const ora = require('ora')
const fs = require('fs')
const download = require('download-git-repo')
const rimraf = require('rimraf')
const { execSync } = require('child_process')
const tplObj = require(`${__dirname}/../template`)
const _cwd = process.cwd()

program
    .usage('<template-name> [project-name]')
program.parse(process.argv)


if (program.args.length < 1) return program.help()

let templateName = program.args[0]
let projectName = program.args[1]

if (!tplObj[templateName]) {
    console.log(chalk.red('\n Template does not exit! \n'))
    return
}
if (!projectName) {
    console.log(chalk.red('\n Project should not be empty! \n'))
    return
}
let url = tplObj[templateName]

console.log(chalk.white('\n Start generating... \n'))

const spinner = ora('Downloading...')
spinner.start()
if(fs.existsSync(`${_cwd}/${projectName}`)) {
    execSync(`rm -rf ${projectName}`)
}
download(url, projectName, err => {
    if (err) {
        spinner.fail()
        console.log(chalk.red(`Generation failed. ${err}`))
        return
    }
    spinner.succeed()
    console.log(chalk.green('\n generation completed!'))
    console.log('\n To get started')
    console.log(`\n cd ${projectName} \n`)
})